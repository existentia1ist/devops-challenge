name: Terraform CI/CD

on:
  workflow_dispatch:  # Ручной запуск
  push:
    branches: [master]  # Триггер на push в master
  pull_request:
    branches: [master]  # Триггер на PR в master

jobs:
  terraform-checks:
    name: "Terraform Checks (${{ matrix.path }})"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path: [clickhouse, postgres, redis]  # Матрица конфигураций
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.4.0
      
      - name: Show context
        run: |
          echo "Processing ${{ matrix.path }}"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
      
      - name: Terraform Init
        run: terraform -chdir=${{ matrix.path }} init -input=false
      
      - name: Terraform Validate
        run: terraform -chdir=${{ matrix.path }} validate -no-color
      
      - name: Terraform Plan
        run: terraform -chdir=${{ matrix.path }} plan -out=tfplan -input=false

  terraform-apply:
    name: "Apply (${{ matrix.path }})"
    needs: terraform-checks
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment: production
    strategy:
      matrix:
        path: [clickhouse, postgres, redis]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - name: Terraform Init
        run: terraform -chdir=${{ matrix.path }} init
      - name: Terraform Apply
        run: terraform -chdir=${{ matrix.path }} apply -auto-approve

  deploy-infra:
    name: "Deploy Infrastructure"
    needs: terraform-apply
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      - name: Start all services
        run: |
          docker-compose up -d
          docker-compose ps
          sleep 10  # Ожидаем инициализацию
          
      - name: Verify services
        run: |
          docker ps -a
          docker inspect clickhouse-server | grep IPAddress
          docker inspect postgres-server | grep IPAddress
          docker inspect redis-server | grep IPAddress
        
  load-data:
    name: "Load Test Data"
    needs: [terraform-apply, deploy-infra]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
    
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests psycopg2-binary clickhouse-driver redis
      
      - name: Load data
        run: python scripts/load_data.py
        env:
          CLICKHOUSE_HOST: clickhouse-server
          POSTGRES_HOST: postgres-server
          REDIS_HOST: redis-server
